@tailwind base;
@tailwind components;
@tailwind utilities;

/* motion based effects are allowed if the user is ok with motion */
@custom-media --motion not (prefers-reduced-motion);

/* lofi effects are allowed if the user doesn't want contrast */
@custom-media --lofi not ((prefers-contrast: more) or (forced-colors));

/* very distracting effects; both lofi and motion. */
@custom-media --distracting (--lofi) and (--motion);

@layer utilities {
	.window {
		@apply p-4 border-4 border-t-[2rem] border-gray-300 relative;
	}
	.window::after {
		@apply content-[''] block absolute top-0 -translate-y-[1.5rem] right-0 h-[calc(1rem-1px)] aspect-square bg-gray-400;

	}
}

body {
	background: rgb(30, 40, 40);
}

h1 {
	@apply mb-2 font-sans text-5xl font-bold text-white lg:text-7xl;
	text-shadow:
		0.5px 0 1px rgba(0, 30, 255, 0.5),
		-0.5px 0 1px rgba(255, 0, 80, 0.3),
		0 0 3px;
}
p {
	@apply font-serif text-gray-200 text-lg;
}
a {
	@apply text-red-600 underline underline-offset-2 relative;
	text-shadow:
		0.5px 0 1px rgba(0, 30, 255, 0.5),
		-0.5px 0 1px rgba(255, 0, 80, 0.3),
		0 0 3px;
}
a:hover {
	@apply text-red-800 underline transition-all;
}

@media (--lofi) {
	/* vignette */
	html::after,
	.vignette::after {
		content: '';
		@apply pointer-events-none fixed left-0 top-0 h-full w-full;
		background: radial-gradient(ellipse at center, rgba(0, 0, 0, 20%) 66%, black 100%);
		z-index: 30;
	}
	/* scanlines */
	body::after,
	.scanlines::before {
		content: '';
		@apply fixed block top-0 left-0 bottom-0 right-0 z-40 pointer-events-none;
		background: linear-gradient(rgba(18, 16, 16, 0) 50%, rgba(0, 0, 0, 0.1) 50%),
			linear-gradient(90deg, rgba(255, 0, 0, 0.025), rgba(0, 128, 0, 0.05), rgba(0, 0, 255, 0.025));
		background-size:
			100% 1%,
			1% 100%;
	}
}

@media (--distracting) {
	body::before {
		background: url('/noise.webp');
		background-size: 10%;
		@apply h-[120%] w-[120%] fixed top-0 left-0 opacity-30 pointer-events-none z-30;
		content: '';
		animation: grain 7s steps(6) infinite;
		image-rendering: pixelated;
	}
}

@keyframes grain {
	0%,
	100% {
		transform: translate(0, 0);
	}
	10% {
		transform: translate(-5%, -10%);
	}
	20% {
		transform: translate(-15%, -20%);
	}
	30% {
		transform: translate(-5%, -10%);
	}
	40% {
		transform: translate(-15%, -20%);
	}
	50% {
		transform: translate(-5%, -10%);
	}
	60% {
		transform: translate(-15%, -20%);
	}
	70% {
		transform: translate(-5%, -10%);
	}
	80% {
		transform: translate(-15%, -20%);
	}
	90% {
		transform: translate(-5%, -10%);
	}
	100% {
		transform: translate(-15%, -20%);
	}
}
